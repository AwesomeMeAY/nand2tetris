// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    	DMux8Way16(in=in, sel=address, a=Register0, b=Register1, c=Register2, d=Register3,
		   e=Register4, f=Register5, g=Register6, h=Register7);	
	Register(in=Register0, load=load, out=RegisterOut0);
	Register(in=Register1, load=load, out=RegisterOut1);
	Register(in=Register2, load=load, out=RegisterOut2);
	Register(in=Register3, load=load, out=RegisterOut3);
	Register(in=Register4, load=load, out=RegisterOut4);
	Register(in=Register5, load=load, out=RegisterOut5);
	Register(in=Register6, load=load, out=RegisterOut6);
	Register(in=Register7, load=load, out=RegisterOut7);
	Mux8Way16(a=RegisterOut0, b=RegisterOut1, c=RegisterOut2, d=RegisterOut3,
		  e=RegisterOut4, f=RegisterOut5, g=RegisterOut6, h=RegisterOut7, sel=address, out=out);

}

